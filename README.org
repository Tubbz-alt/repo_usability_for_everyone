#+TITLE: Repository Usability Checker for everyone

* 问题是什么?
deepin仓库是由deepin团队在维护，通过定期集成debian sid上游进行发布。
然而不论是debian sid还是deepin panda(deepin社区版目前的官方仓库)都是处在一个变动
的状态，没有任何一个时刻是“完美”的。本质原因是由于，仓库组件实在太多，每个组件
都处于一种动态状态，想要找到100%的正确组合是十分困难的。即使幸运的遇到一次，也很快
会因为各种原因被迫变动。

为了让仓库对用户可用，一是要靠系统团队小心处理变动，勤快跟踪上游的工作。二是需要有
一套严格的检测机制去进行黑箱测试。

* 普遍的做法
deepin目前已经做了以下工作
1. 每次仓库变动前都必须通过 https://rr.deepin.io 平台进行review
2. 至少测试最近发布的ISO版本到新仓库的升级情况。
3. 至少测试当前最新仓库与即将更新仓库的升级情况。
3. 测试软件商店中上架软件对当前仓库的配合度。

* 进一步的改进
然而每次更新依旧会遇到没有提前检测出来的问题。核心原因在于
1. debian sid本身的问题
2. panda变动部分与sid的兼容性测试力度不够
3. 测试环境的初始状态与实际情况相差甚远

本项目的设计初衷在于解决问题3的同时，增强其他两点的力度。

传统方式只能通过预装ISO的状态作为升级测试的基准环境。然而现实情况中几乎不会遇到
装完ISO后不做任何变动的用户。因此检测的基准环境都存在比较大的问题。

所以本项目打算通过用户主动提交当前实际使用的状态到一个集中的地方(本项目下)，deepin
则通过这些实际的基准环境进行仓库变动review的输入。从而在理想状态下，可以针对每一位
实际用户进行更新测试。

* 如何帮助deepin完成检测改进
1. 安装deepin-rsc-uploader工具(暂未开发完成)
2. 使用deepin-rsc-uploader上传本机信息(system_status)。会收集以下信息
   1. /etc/machine-id 作为用户id
   2. 等价于dpkg -l的输出信息 作为用户当前安装的软件情况
   3. 等价与apt-cache policy的输出信息，作为用户源配置情况
3. 步骤2中的信息会统一存放在deepin服务器中，并定期以这些信息作为基准测试环境纳入仓库
   变动review时的重要参考信息。

这样做最大的好处在于
1. 可以收集到deepin用户实际的软件包安装使用情况，以便针对性加大对使用量大的软件包进行更严格的测试
2. 可以针对每个用户进行测试，用户可以在实际更新前，查看到本机进行升级的风险程度。


* TODOList
- 实现deepin-rsc-uploader以及对应的数据存取API
- 实现deepin-rsc-calculate工具，(system_status, repo_info) --> score 
  输入任意系统状态(deepin-rsc-uploader上传的数据)和一个仓库地址得到一个健康程度分数。
　PS: system_status除了由实际用户上传，也会由测试团队进行特意构造。比如构造一种安装了所有应用商店软件的状态。
- 将目前的rr-checker等已有的检测机器人集成到deepin-rsc-calculate中
- 集成deepin-rsc-uploader的功能到DDE中(需用户主动开启)
- 基于system_status相同部分很大的特点，设计一种cache机制，加快检测结果的生成。
